{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ReservationContext } from \"../context/ReservationContext\";\nimport { useContext } from \"react\";\nexport const useReservationContext = () => {\n  _s();\n  const context = useContext(ReservationContext);\n  if (!context) {\n    throw Error(\"useReservationContext must be used inside a ReservationContextProvider\");\n  }\n  const {\n    reservations,\n    dispatch\n  } = context;\n  const createReservation = async reservation => {\n    try {\n      const response = await fetch(\"/api/reservations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(reservation)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create reservation\");\n      }\n      const createdReservation = await response.json();\n      dispatch({\n        type: \"CREATE_RESERVATION\",\n        payload: createdReservation\n      });\n    } catch (error) {\n      console.error(\"Error creating reservation:\", error);\n      throw error;\n    }\n  };\n  const updateReservation = async (reservationId, updatedFields) => {\n    try {\n      const response = await fetch(`/api/reservations/${reservationId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedFields)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update reservation\");\n      }\n      const updatedReservation = await response.json();\n      dispatch({\n        type: \"UPDATE_RESERVATION\",\n        payload: updatedReservation\n      });\n    } catch (error) {\n      console.error(\"Error updating reservation:\", error);\n      throw error;\n    }\n  };\n  const deleteReservation = async reservationId => {\n    try {\n      const response = await fetch(`/api/reservations/${reservationId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete reservation\");\n      }\n      dispatch({\n        type: \"DELETE_RESERVATION\",\n        payload: reservationId\n      });\n    } catch (error) {\n      console.error(\"Error deleting reservation:\", error);\n      throw error;\n    }\n  };\n  return {\n    reservations,\n    dispatch,\n    createReservation,\n    updateReservation,\n    deleteReservation\n  };\n};\n_s(useReservationContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");","map":{"version":3,"names":["ReservationContext","useContext","useReservationContext","_s","context","Error","reservations","dispatch","createReservation","reservation","response","fetch","method","headers","body","JSON","stringify","ok","createdReservation","json","type","payload","error","console","updateReservation","reservationId","updatedFields","updatedReservation","deleteReservation"],"sources":["Z:/inventory4/equipment_reservation_system/frontend/src/hooks/useReservationContext.js"],"sourcesContent":["import { ReservationContext } from \"../context/ReservationContext\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useReservationContext = () => {\r\n  const context = useContext(ReservationContext);\r\n\r\n  if (!context) {\r\n    throw Error(\r\n      \"useReservationContext must be used inside a ReservationContextProvider\"\r\n    );\r\n  }\r\n\r\n  const { reservations, dispatch } = context;\r\n\r\n  const createReservation = async (reservation) => {\r\n    try {\r\n      const response = await fetch(\"/api/reservations\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(reservation),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create reservation\");\r\n      }\r\n\r\n      const createdReservation = await response.json();\r\n\r\n      dispatch({ type: \"CREATE_RESERVATION\", payload: createdReservation });\r\n    } catch (error) {\r\n      console.error(\"Error creating reservation:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateReservation = async (reservationId, updatedFields) => {\r\n    try {\r\n      const response = await fetch(`/api/reservations/${reservationId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedFields),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update reservation\");\r\n      }\r\n\r\n      const updatedReservation = await response.json();\r\n\r\n      dispatch({ type: \"UPDATE_RESERVATION\", payload: updatedReservation });\r\n    } catch (error) {\r\n      console.error(\"Error updating reservation:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const deleteReservation = async (reservationId) => {\r\n    try {\r\n      const response = await fetch(`/api/reservations/${reservationId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete reservation\");\r\n      }\r\n\r\n      dispatch({ type: \"DELETE_RESERVATION\", payload: reservationId });\r\n    } catch (error) {\r\n      console.error(\"Error deleting reservation:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return {\r\n    reservations,\r\n    dispatch,\r\n    createReservation,\r\n    updateReservation,\r\n    deleteReservation,\r\n  };\r\n};"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,+BAA+B;AAClE,SAASC,UAAU,QAAQ,OAAO;AAElC,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGH,UAAU,CAACD,kBAAkB,CAAC;EAE9C,IAAI,CAACI,OAAO,EAAE;IACZ,MAAMC,KAAK,CACT,wEACF,CAAC;EACH;EAEA,MAAM;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGH,OAAO;EAE1C,MAAMI,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIZ,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMa,kBAAkB,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAEhDZ,QAAQ,CAAC;QAAEa,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAEH;MAAmB,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,aAAa,KAAK;IAChE,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBc,aAAc,EAAC,EAAE;QACjEb,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,aAAa;MACpC,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIZ,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMsB,kBAAkB,GAAG,MAAMjB,QAAQ,CAACS,IAAI,CAAC,CAAC;MAEhDZ,QAAQ,CAAC;QAAEa,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAEM;MAAmB,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAOH,aAAa,IAAK;IACjD,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBc,aAAc,EAAC,EAAE;QACjEb,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIZ,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEAE,QAAQ,CAAC;QAAEa,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAEI;MAAc,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,OAAO;IACLhB,YAAY;IACZC,QAAQ;IACRC,iBAAiB;IACjBgB,iBAAiB;IACjBI;EACF,CAAC;AACH,CAAC;AAACzB,EAAA,CAjFWD,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}