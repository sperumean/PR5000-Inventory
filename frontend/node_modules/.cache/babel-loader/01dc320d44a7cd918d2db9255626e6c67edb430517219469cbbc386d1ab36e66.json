{"ast":null,"code":"var _jsxFileName = \"Z:\\\\inventory4\\\\equipment_reservation_system\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useEquipmentContext } from \"../hooks/useEquipmentContext\";\nimport EquipmentCard from \"../components/EquipmentCard\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    equipment,\n    dispatch,\n    setEquipment\n  } = useEquipmentContext();\n  const {\n    user\n  } = useAuthContext();\n  const todaysDayFormated = new Date().toISOString().substring(0, 10);\n\n  // const updateEquipment = async (equip) => {\n  //   try {\n  //     const response = await fetch(`/api/equipment/${equip._id}`, {\n  //       method: \"PUT\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Authorization: `Bearer ${user?.token}`,\n  //       },\n  //       body: JSON.stringify({\n  //         availability: false,\n  //       }),\n  //     });\n\n  //     if (response.ok) {\n  //       const updatedEquip = await response.json();\n  //       setEquipment((prevEquip) =>\n  //         prevEquip.map((e) =>\n  //           e._id === updatedEquip._id\n  //             ? { ...e, availability: updatedEquip?.availability }\n  //             : e\n  //         )\n  //       );\n\n  //       dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquip });\n  //       console.log(\"Equipment updated successfully\");\n  //     } else {\n  //       console.error(\"Failed to update equipment\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error updating equipment:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const equipmentResponse = await fetch(\"/api/equipment\");\n        const equipmentJson = await equipmentResponse.json();\n        if (equipmentResponse.ok) {\n          dispatch({\n            type: \"SET_EQUIPMENT\",\n            payload: equipmentJson\n          });\n\n          // Tik jei sėkmingai gauta įranga, tada vykdyti kitus žingsnius\n          // const reservationsResponse = await fetch(\"/api/reservations\", {\n          //   headers: {\n          //     \"Content-Type\": \"application/json\",\n          //     Authorization: `Bearer ${user.token}`,\n          //   },\n          // });\n          // const reservationsData = await reservationsResponse.json();\n\n          // if (reservationsResponse.ok) {\n          //   if (!equipment || equipment.length === 0) {\n          //     console.error(\"Equipment is null or empty.\");\n          //     return;\n          //   }\n\n          //   if (typeof setEquipment !== \"function\") {\n          //     console.error(\"setEquipment is not a function.\");\n          //     return;\n          //   }\n          //   const reservationsToUpdate = reservationsData.filter(\n          //     (reservation) => {\n          //       const condition1 =\n          //         todaysDayFormated === reservation.date.substring(0, 10);\n          //       const condition2 = reservation.reservation_status === \"Rented\";\n          //       const condition3 = equipment.some(\n          //         (equip) => equip._id === reservation.equipment_id\n          //       );\n\n          //       return condition1 && condition2 && condition3;\n          //     }\n          //   );\n\n          //   if (reservationsToUpdate.length > 0) {\n          //     const updatedEquipments = equipment.map((equip) => {\n          //       const reservationToUpdate = reservationsToUpdate.find(\n          //         (reservation) => reservation.equipment_id === equip._id\n          //       );\n          //       if (reservationToUpdate) {\n          //         updateEquipment(equip);\n          //       }\n          //       return equip;\n          //     });\n\n          // dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquipments });\n          //   }\n          // }\n\n          // dispatch({ type: \"SET_RESERVATIONS\", payload: reservationsData });\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [dispatch, setEquipment, user === null || user === void 0 ? void 0 : user.token, todaysDayFormated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PR5000 Scanners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment\",\n      children: equipment && equipment.length > 0 ? equipment.map(equip => user && user.role === \"user\" && equip.draft ? null : /*#__PURE__*/_jsxDEV(EquipmentCard, {\n        equipment: equip\n      }, equip._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No equipment found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"emVYCjx0eKpCR3JXlWShAVmlxFM=\", false, function () {\n  return [useEquipmentContext, useAuthContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useEquipmentContext","EquipmentCard","useAuthContext","jsxDEV","_jsxDEV","Home","_s","equipment","dispatch","setEquipment","user","todaysDayFormated","Date","toISOString","substring","fetchData","equipmentResponse","fetch","equipmentJson","json","ok","type","payload","error","console","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","equip","role","draft","_id","_c","$RefreshReg$"],"sources":["Z:/inventory4/equipment_reservation_system/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useEquipmentContext } from \"../hooks/useEquipmentContext\";\r\nimport EquipmentCard from \"../components/EquipmentCard\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Home = () => {\r\n  const { equipment, dispatch, setEquipment } = useEquipmentContext();\r\n  const { user } = useAuthContext();\r\n  const todaysDayFormated = new Date().toISOString().substring(0, 10);\r\n\r\n  // const updateEquipment = async (equip) => {\r\n  //   try {\r\n  //     const response = await fetch(`/api/equipment/${equip._id}`, {\r\n  //       method: \"PUT\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Authorization: `Bearer ${user?.token}`,\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         availability: false,\r\n  //       }),\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       const updatedEquip = await response.json();\r\n  //       setEquipment((prevEquip) =>\r\n  //         prevEquip.map((e) =>\r\n  //           e._id === updatedEquip._id\r\n  //             ? { ...e, availability: updatedEquip?.availability }\r\n  //             : e\r\n  //         )\r\n  //       );\r\n\r\n  //       dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquip });\r\n  //       console.log(\"Equipment updated successfully\");\r\n  //     } else {\r\n  //       console.error(\"Failed to update equipment\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating equipment:\", error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const equipmentResponse = await fetch(\"/api/equipment\");\r\n        const equipmentJson = await equipmentResponse.json();\r\n\r\n        if (equipmentResponse.ok) {\r\n          dispatch({ type: \"SET_EQUIPMENT\", payload: equipmentJson });\r\n\r\n          // Tik jei sėkmingai gauta įranga, tada vykdyti kitus žingsnius\r\n          // const reservationsResponse = await fetch(\"/api/reservations\", {\r\n          //   headers: {\r\n          //     \"Content-Type\": \"application/json\",\r\n          //     Authorization: `Bearer ${user.token}`,\r\n          //   },\r\n          // });\r\n          // const reservationsData = await reservationsResponse.json();\r\n\r\n          // if (reservationsResponse.ok) {\r\n          //   if (!equipment || equipment.length === 0) {\r\n          //     console.error(\"Equipment is null or empty.\");\r\n          //     return;\r\n          //   }\r\n\r\n          //   if (typeof setEquipment !== \"function\") {\r\n          //     console.error(\"setEquipment is not a function.\");\r\n          //     return;\r\n          //   }\r\n          //   const reservationsToUpdate = reservationsData.filter(\r\n          //     (reservation) => {\r\n          //       const condition1 =\r\n          //         todaysDayFormated === reservation.date.substring(0, 10);\r\n          //       const condition2 = reservation.reservation_status === \"Rented\";\r\n          //       const condition3 = equipment.some(\r\n          //         (equip) => equip._id === reservation.equipment_id\r\n          //       );\r\n\r\n          //       return condition1 && condition2 && condition3;\r\n          //     }\r\n          //   );\r\n\r\n          //   if (reservationsToUpdate.length > 0) {\r\n          //     const updatedEquipments = equipment.map((equip) => {\r\n          //       const reservationToUpdate = reservationsToUpdate.find(\r\n          //         (reservation) => reservation.equipment_id === equip._id\r\n          //       );\r\n          //       if (reservationToUpdate) {\r\n          //         updateEquipment(equip);\r\n          //       }\r\n          //       return equip;\r\n          //     });\r\n\r\n          // dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquipments });\r\n          //   }\r\n          // }\r\n\r\n          // dispatch({ type: \"SET_RESERVATIONS\", payload: reservationsData });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [dispatch, setEquipment, user?.token, todaysDayFormated]);\r\n\r\n  return (\r\n    <div className=\"home content-wrapper\">\r\n      <h1>PR5000 Scanners</h1>\r\n      <div className=\"equipment\">\r\n        {equipment && equipment.length > 0 ? (\r\n          equipment.map((equip) =>\r\n            user && user.role === \"user\" && equip.draft ? null : (\r\n              <EquipmentCard key={equip._id} equipment={equip} />\r\n            )\r\n          )\r\n        ) : (\r\n          <p>No equipment found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}