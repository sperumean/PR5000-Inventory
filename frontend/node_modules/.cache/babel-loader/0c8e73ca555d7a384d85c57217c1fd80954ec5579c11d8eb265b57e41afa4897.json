{"ast":null,"code":"import{useEffect}from\"react\";import{useEquipmentContext}from\"../hooks/useEquipmentContext\";import EquipmentCard from\"../components/EquipmentCard\";import{useAuthContext}from\"../hooks/useAuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const{equipment,dispatch,setEquipment}=useEquipmentContext();const{user}=useAuthContext();const todaysDayFormated=new Date().toISOString().substring(0,10);// const updateEquipment = async (equip) => {\n//   try {\n//     const response = await fetch(`/api/equipment/${equip._id}`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${user?.token}`,\n//       },\n//       body: JSON.stringify({\n//         availability: false,\n//       }),\n//     });\n//     if (response.ok) {\n//       const updatedEquip = await response.json();\n//       setEquipment((prevEquip) =>\n//         prevEquip.map((e) =>\n//           e._id === updatedEquip._id\n//             ? { ...e, availability: updatedEquip?.availability }\n//             : e\n//         )\n//       );\n//       dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquip });\n//       console.log(\"Equipment updated successfully\");\n//     } else {\n//       console.error(\"Failed to update equipment\");\n//     }\n//   } catch (error) {\n//     console.error(\"Error updating equipment:\", error);\n//   }\n// };\nuseEffect(()=>{const fetchData=async()=>{try{const equipmentResponse=await fetch(\"/api/equipment\");const equipmentJson=await equipmentResponse.json();if(equipmentResponse.ok){dispatch({type:\"SET_EQUIPMENT\",payload:equipmentJson});// Tik jei sėkmingai gauta įranga, tada vykdyti kitus žingsnius\n// const reservationsResponse = await fetch(\"/api/reservations\", {\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Authorization: `Bearer ${user.token}`,\n//   },\n// });\n// const reservationsData = await reservationsResponse.json();\n// if (reservationsResponse.ok) {\n//   if (!equipment || equipment.length === 0) {\n//     console.error(\"Equipment is null or empty.\");\n//     return;\n//   }\n//   if (typeof setEquipment !== \"function\") {\n//     console.error(\"setEquipment is not a function.\");\n//     return;\n//   }\n//   const reservationsToUpdate = reservationsData.filter(\n//     (reservation) => {\n//       const condition1 =\n//         todaysDayFormated === reservation.date.substring(0, 10);\n//       const condition2 = reservation.reservation_status === \"Rented\";\n//       const condition3 = equipment.some(\n//         (equip) => equip._id === reservation.equipment_id\n//       );\n//       return condition1 && condition2 && condition3;\n//     }\n//   );\n//   if (reservationsToUpdate.length > 0) {\n//     const updatedEquipments = equipment.map((equip) => {\n//       const reservationToUpdate = reservationsToUpdate.find(\n//         (reservation) => reservation.equipment_id === equip._id\n//       );\n//       if (reservationToUpdate) {\n//         updateEquipment(equip);\n//       }\n//       return equip;\n//     });\n// dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquipments });\n//   }\n// }\n// dispatch({ type: \"SET_RESERVATIONS\", payload: reservationsData });\n}}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();},[dispatch,setEquipment,user===null||user===void 0?void 0:user.token,todaysDayFormated]);return/*#__PURE__*/_jsxs(\"div\",{className:\"home content-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"PR5000 Scanners\"}),/*#__PURE__*/_jsx(\"div\",{className:\"equipment\",children:equipment&&equipment.length>0?equipment.map(equip=>user&&user.role===\"user\"&&equip.draft?null:/*#__PURE__*/_jsx(EquipmentCard,{equipment:equip},equip._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No equipment found.\"})})]});};export default Home;","map":{"version":3,"names":["useEffect","useEquipmentContext","EquipmentCard","useAuthContext","jsx","_jsx","jsxs","_jsxs","Home","equipment","dispatch","setEquipment","user","todaysDayFormated","Date","toISOString","substring","fetchData","equipmentResponse","fetch","equipmentJson","json","ok","type","payload","error","console","token","className","children","length","map","equip","role","draft","_id"],"sources":["Z:/inventory4/equipment_reservation_system/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useEquipmentContext } from \"../hooks/useEquipmentContext\";\r\nimport EquipmentCard from \"../components/EquipmentCard\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Home = () => {\r\n  const { equipment, dispatch, setEquipment } = useEquipmentContext();\r\n  const { user } = useAuthContext();\r\n  const todaysDayFormated = new Date().toISOString().substring(0, 10);\r\n\r\n  // const updateEquipment = async (equip) => {\r\n  //   try {\r\n  //     const response = await fetch(`/api/equipment/${equip._id}`, {\r\n  //       method: \"PUT\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Authorization: `Bearer ${user?.token}`,\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         availability: false,\r\n  //       }),\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       const updatedEquip = await response.json();\r\n  //       setEquipment((prevEquip) =>\r\n  //         prevEquip.map((e) =>\r\n  //           e._id === updatedEquip._id\r\n  //             ? { ...e, availability: updatedEquip?.availability }\r\n  //             : e\r\n  //         )\r\n  //       );\r\n\r\n  //       dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquip });\r\n  //       console.log(\"Equipment updated successfully\");\r\n  //     } else {\r\n  //       console.error(\"Failed to update equipment\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating equipment:\", error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const equipmentResponse = await fetch(\"/api/equipment\");\r\n        const equipmentJson = await equipmentResponse.json();\r\n\r\n        if (equipmentResponse.ok) {\r\n          dispatch({ type: \"SET_EQUIPMENT\", payload: equipmentJson });\r\n\r\n          // Tik jei sėkmingai gauta įranga, tada vykdyti kitus žingsnius\r\n          // const reservationsResponse = await fetch(\"/api/reservations\", {\r\n          //   headers: {\r\n          //     \"Content-Type\": \"application/json\",\r\n          //     Authorization: `Bearer ${user.token}`,\r\n          //   },\r\n          // });\r\n          // const reservationsData = await reservationsResponse.json();\r\n\r\n          // if (reservationsResponse.ok) {\r\n          //   if (!equipment || equipment.length === 0) {\r\n          //     console.error(\"Equipment is null or empty.\");\r\n          //     return;\r\n          //   }\r\n\r\n          //   if (typeof setEquipment !== \"function\") {\r\n          //     console.error(\"setEquipment is not a function.\");\r\n          //     return;\r\n          //   }\r\n          //   const reservationsToUpdate = reservationsData.filter(\r\n          //     (reservation) => {\r\n          //       const condition1 =\r\n          //         todaysDayFormated === reservation.date.substring(0, 10);\r\n          //       const condition2 = reservation.reservation_status === \"Rented\";\r\n          //       const condition3 = equipment.some(\r\n          //         (equip) => equip._id === reservation.equipment_id\r\n          //       );\r\n\r\n          //       return condition1 && condition2 && condition3;\r\n          //     }\r\n          //   );\r\n\r\n          //   if (reservationsToUpdate.length > 0) {\r\n          //     const updatedEquipments = equipment.map((equip) => {\r\n          //       const reservationToUpdate = reservationsToUpdate.find(\r\n          //         (reservation) => reservation.equipment_id === equip._id\r\n          //       );\r\n          //       if (reservationToUpdate) {\r\n          //         updateEquipment(equip);\r\n          //       }\r\n          //       return equip;\r\n          //     });\r\n\r\n          // dispatch({ type: \"SET_EQUIPMENT\", payload: updatedEquipments });\r\n          //   }\r\n          // }\r\n\r\n          // dispatch({ type: \"SET_RESERVATIONS\", payload: reservationsData });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [dispatch, setEquipment, user?.token, todaysDayFormated]);\r\n\r\n  return (\r\n    <div className=\"home content-wrapper\">\r\n      <h1>PR5000 Scanners</h1>\r\n      <div className=\"equipment\">\r\n        {equipment && equipment.length > 0 ? (\r\n          equipment.map((equip) =>\r\n            user && user.role === \"user\" && equip.draft ? null : (\r\n              <EquipmentCard key={equip._id} equipment={equip} />\r\n            )\r\n          )\r\n        ) : (\r\n          <p>No equipment found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,mBAAmB,KAAQ,8BAA8B,CAClE,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,OAASC,cAAc,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzD,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAGV,mBAAmB,CAAC,CAAC,CACnE,KAAM,CAAEW,IAAK,CAAC,CAAGT,cAAc,CAAC,CAAC,CACjC,KAAM,CAAAU,iBAAiB,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAhB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,iBAAiB,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CACvD,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAF,iBAAiB,CAACG,IAAI,CAAC,CAAC,CAEpD,GAAIH,iBAAiB,CAACI,EAAE,CAAE,CACxBZ,QAAQ,CAAC,CAAEa,IAAI,CAAE,eAAe,CAAEC,OAAO,CAAEJ,aAAc,CAAC,CAAC,CAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACF,CACF,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDR,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACP,QAAQ,CAAEC,YAAY,CAAEC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEe,KAAK,CAAEd,iBAAiB,CAAC,CAAC,CAE5D,mBACEN,KAAA,QAAKqB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCxB,IAAA,OAAAwB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBxB,IAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBpB,SAAS,EAAIA,SAAS,CAACqB,MAAM,CAAG,CAAC,CAChCrB,SAAS,CAACsB,GAAG,CAAEC,KAAK,EAClBpB,IAAI,EAAIA,IAAI,CAACqB,IAAI,GAAK,MAAM,EAAID,KAAK,CAACE,KAAK,CAAG,IAAI,cAChD7B,IAAA,CAACH,aAAa,EAAiBO,SAAS,CAAEuB,KAAM,EAA5BA,KAAK,CAACG,GAAwB,CAEtD,CAAC,cAED9B,IAAA,MAAAwB,QAAA,CAAG,qBAAmB,CAAG,CAC1B,CACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}